{
	"category": "interaction-handlers",
}
---
const { InteractionHandler, InteractionHandlerTypes } = require('@sapphire/framework');
class AutocompleteHandler extends InteractionHandler {
  constructor(ctx, options) {
    super(ctx, {
      ...options,
      interactionHandlerType: InteractionHandlerTypes.Autocomplete
    });
  }

  async run(interaction, result) {
    return interaction.respond(result);
  }

  async parse(interaction) {
    // Only run this interaction for the command with ID '1000802763292020737'
    if (interaction.commandId !== '1000802763292020737') return this.none();
    // Get the focussed (current) option
    const focusedOption = interaction.options.getFocused(true);
    // Ensure that the option name is one that can be autocompleted, or return none if not.
    switch (focusedOption.name) {
      case 'search': {
        // Search your API or similar. This is example code!
        const searchResult = await myApi.searchForSomething(focusedOption.value);
        // Map the search results to the structure required for Autocomplete
        return this.some(searchResult.map((match) => ({ name: match.name, value: match.key })));
      }
      default:
        return this.none();
    }
  }
}

module.exports = {
  AutocompleteHandler
};
